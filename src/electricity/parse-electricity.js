import { getStringsFromPdf } from '../shared/parse-pdf.js';
import { filenamePrefix } from './fetch-electricity.js';

export async function parse(binary) {
  if (binary === null || binary.length === 0) {
    return { text: '‚ö°Ô∏è: –°—á—ë—Ç–∞ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç üôÅ' };
  }
  const strings = await getStringsFromPdf(binary);
  const value = parseBill(strings);

  return {
    text: `‚ö°Ô∏è: ${value} ‚ÇΩ`,
    value,
    fileTitle: filenamePrefix + 'bill.pdf',
    fileBuffer: binary,
  };
}

function parseBill(strings) {
  let dayMarker = '';
  let nightMarker = '';
  let summaryMarker = '';
  let dayOffset = 0;
  let nightOffset = 0;
  let summaryOffset = 0;

  if (strings.indexOf('–ï–î–ò–ù–´–ô –ü–õ–ê–¢–ï–ñ–ù–´–ô –î–û–ö–£–ú–ï–ù–¢') !== -1) {
    // –°—á—ë—Ç –æ—Ç –ú–æ—Å–û–±–ª–ï–ò–†–¶
    dayMarker = '–≠–õ–ï–ö–¢–†–ò–ß–ï–°–¢–í–û –î–ï–ù–¨';
    dayOffset = 5;
    nightMarker = '–≠–õ–ï–ö–¢–†–ò–ß–ï–°–¢–í–û –ù–û–ß–¨';
    nightOffset = 5;
  } else {
    dayMarker = ' (–¢2) –Ω–æ—á—å –î1';
    dayOffset = -1;
    nightMarker = '–ù–∞—á–∏—Å–ª–µ–Ω–æ –∑–∞ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—é –≤ —Ä–∞—Å—á—ë—Ç–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ: ';
    nightOffset = -1;
    summaryMarker = '–ù–∞—á–∏—Å–ª–µ–Ω–æ –∑–∞ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—é –≤ —Ä–∞—Å—á—ë—Ç–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ: ';
    summaryOffset = 1;
  }

  const idxDay = strings.indexOf(dayMarker) + dayOffset;
  const dayBill = Number(strings[idxDay].replace(',', '.'));
  const idxNight = strings.indexOf(nightMarker) + nightOffset;
  const nightBill = Number(strings[idxNight].replace(',', '.'));
  const idxSummary = strings.indexOf(summaryMarker) + summaryOffset;
  const summary = Number(strings[idxSummary].replace(',', '.'));

  return summary;
}
